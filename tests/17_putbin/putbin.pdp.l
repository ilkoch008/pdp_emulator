000000:			.=1000
001000:		main:
001000:			mov #main, sp
	 012706
	 001000
001004:			;lmov #-5, R1
001004:			;jsr pc, put21
001004:			mov #107075, R1
	 012701
	 107075
001010:			jsr	pc, putbin
	 004767
	 000002
001014:			halt
	 000000
001016:		
001016:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
001016:		; putbin - print 1 binary digit
001016:		;   R1 - number
001016:		; corrupted:
001016:		;   flags
001016:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
001016:		putbin:
001016:			mov R1, -(sp)
	 010146
001020:			mov R3, -(sp)
	 010346
001022:			mov #20, R3
	 012703
	 000020
001026:		putbinloop:
001026:			jsr pc, put21
	 004767
	 000012
001032:			asl R1
	 006301
001034:			sob R3, putbinloop
	 077304
001036:			
001036:			
001036:			mov (sp)+, R3
	 012603
001040:			mov (sp)+, R1
	 012601
001042:			rts pc
	 000207
001044:		
001044:		
001044:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
001044:		; put21 - print 1 binary digit
001044:		;   R1 - number
001044:		; corrupted:
001044:		;   R0
001044:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
001044:		put21:	
001044:			movb #'0, R0
	 112700
	 000060
001050:			tst	R1
	 005701
001052:			bpl put21end
	 100001
001054:			incb R0
	 105200
001056:		put21end:
001056:			jsr pc, putc
	 004767
	 000016
001062:			rts pc
	 000207
001064:		
001064:			
001064:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
001064:		; puts - print string up to 0
001064:		;   R1 - string address
001064:		; corrupted:
001064:		;   R0
001064:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
001064:		puts:	
001064:			movb 	(R1)+, R0
	 112100
001066:			beq 	ENDputs
	 001403
001070:			jsr		pc, putc
	 004767
	 000004
001074:			br		puts
	 000773
001076:		ENDputs:
001076:			rts		pc
	 000207
001100:		
001100:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
001100:		; putc - print 1 character from R0
001100:		;   R0 - ascii code
001100:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
001100:		ostat = 177564
001100:		odata = 177566
001100:		putc:
001100:			tstb	@#ostat
	 105737
	 177564
001104:			bpl		putc
	 100375
001106:			movb	R0, @#odata
	 110037
	 177566
001112:			rts 	pc
	 000207
001114:			
